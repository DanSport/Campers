// src/pages/VanDetailsPage/VanDetailsPage.jsx
import { useEffect } from "react";
import { NavLink, Outlet, useParams } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import { fetchVanDetails } from "../../store/vanSlice";
import ReservationForm from "../../components/ReservationForm/ReservationForm";
import { toast } from "react-hot-toast";
import styles from "./VanDetailsPage.module.css"; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å—Ç–∏–ª—ñ

export default function VanDetailsPage() {
  const { id } = useParams();
  const dispatch = useDispatch();
  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ñ—É—Ä–≥–æ–Ω –∑ Redux
  const { currentVan, status, error } = useSelector((state) => state.vans); // –ó–º—ñ–Ω–µ–Ω–æ 's' –Ω–∞ 'state' –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ

  useEffect(() => {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ñ—É—Ä–≥–æ–Ω–∞ –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–±–æ –∑–º—ñ–Ω—ñ id
    dispatch(fetchVanDetails(id));
  }, [dispatch, id]);

  // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–æ–∫
  if (status === "loading")
    return <div className={styles.statusMessage}>Loading details...</div>;
  if (status === "failed")
    return <div className={styles.statusMessageError}>Error: {error}</div>;
  if (!currentVan)
    return <div className={styles.statusMessage}>Van details not found.</div>;

  // –û—Ç—Ä–∏–º—É—î–º–æ URL –ø–µ—Ä—à–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –º—ñ–Ω—ñ–∞—Ç—é—Ä–∏ –∞–±–æ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
  const mainImageUrl =
    currentVan.gallery && currentVan.gallery.length > 0
      ? currentVan.gallery[0].original // –ê–±–æ .thumb, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –±–∞–∂–∞–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É
      : "/placeholder-large.jpg"; // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä, —è–∫—â–æ —î

  return (
    <div className={styles.detailsContainer}>
      {/* –ù–∞–∑–≤–∞ —Ñ—É—Ä–≥–æ–Ω–∞ */}
      <h1 className={styles.vanName}>{currentVan.name}</h1>

      {/* –†–µ–π—Ç–∏–Ω–≥, –ª–æ–∫–∞—Ü—ñ—è —Ç–∞ —Ü—ñ–Ω–∞ */}
      <div className={styles.infoRow}>
        <div className={styles.ratingLocationGroup}>
          <span className={styles.ratingText}>
            <svg className={styles.starIcon}>
              <use href={`/images/icons.svg#icon-star`}></use>
            </svg>
            {currentVan.rating} (
            {currentVan.reviews ? currentVan.reviews.length : 0} Reviews)
          </span>
          <span className={styles.locationText}>
            <svg className={styles.locationIcon}>
              <use href="/images/icons.svg#icon-map"></use>
            </svg>
            {currentVan.location}
          </span>
        </div>
        {/* –¶—ñ–Ω–∞ –±–µ–∑ toLocaleString(), —Ç—ñ–ª—å–∫–∏ –¥–≤–∞ –∑–Ω–∞–∫–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏ */}
        <div className={styles.vanPrice}>‚Ç¨{currentVan.price.toFixed(2)}</div>
      </div>

      {/* –ì–∞–ª–µ—Ä–µ—è –∑–æ–±—Ä–∞–∂–µ–Ω—å */}
      <div className={styles.galleryGrid}>
        {currentVan.gallery && currentVan.gallery.length > 0 ? (
          currentVan.gallery.map((img, index) => (
            <img
              key={index}
              src={img.thumb || img.original}
              alt={`${currentVan.name} image ${index + 1}`}
              className={styles.galleryImage}
            />
          ))
        ) : (
          <img
            src="/placeholder.jpg"
            alt="No image available"
            className={styles.galleryImagePlaceholder}
          />
        )}
      </div>

      {/* –û–ø–∏—Å —Ñ—É—Ä–≥–æ–Ω–∞ */}
      <p className={styles.vanDescription}>{currentVan.description}</p>

      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ –≤–∫–ª–∞–¥–∫–∏ (Features, Reviews) */}
      <div className={styles.tabNavigation}>
        <NavLink
          to="features"
          end // –í–∞–∂–ª–∏–≤–æ, —â–æ–± "features" –±—É–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—é —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ —à–ª—è—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ /features
          className={({ isActive }) =>
            isActive ? styles.tabLinkActive : styles.tabLink
          }
        >
          Features
        </NavLink>
        <NavLink
          to="reviews"
          className={({ isActive }) =>
            isActive ? styles.tabLinkActive : styles.tabLink
          }
        >
          Reviews
        </NavLink>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç (FeaturesPage –∞–±–æ ReviewsPage) —Ç–∞ —Ñ–æ—Ä–º–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è */}
      <div className={styles.contentAndBookingLayout}>
        <div className={styles.outletContent}>
          {/* Outlet –ø–µ—Ä–µ–¥–∞—î currentVan –¥–æ –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ (FeaturesPage, ReviewsPage) */}
          <Outlet context={{ van: currentVan }} />
        </div>
        <div className={styles.bookingFormSection}>
          <ReservationForm
            vanName={currentVan.name}
            onSuccess={() => toast.success("Booking request sent! üéâ")}
          />
        </div>
      </div>
    </div>
  );
}
